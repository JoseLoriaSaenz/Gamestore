@using Gamestore.Models
@inject NavigationManager NavigationManager
@page "/"

<PageTitle>Game Catalog</PageTitle>

<h1>Games Catalog</h1>

<div class="row mb-4">
    <div class="col-sm-6">
        <button class="btn btn-primary" type="button" @onclick="CreateGame">New Game</button>
    </div>
</div>

@if (gameList == null)
{
    <p><em>Loading Game List ....</em></p>
}
else
{
    <DeleteGame Game="currentGame" OnClose="OnDeleteModalClose"></DeleteGame>

    <table class="table table-striped table-bordered table-hover">
        <thead class="table-dark">
            <th>Id</th>
            <th>Name</th>
            <th>Gender</th>
            <th>Price</th>
            <th>Release Date</th>
            <th></th>
        </thead>
        <tbody>
            @foreach (var game in gameList)
            {
                <tr>
                    <td>@game.Id</td>
                    <td>@game.Name</td>
                    <td>@game.Genre</td>
                    <td>@game.Price</td>
                    <td>@game.ReleaseDate.ToShortDateString()</td>
                    <td>
                        <button type="button" class="btn btn-primary" @onclick="() => EditGame(game.Id)">
                            <i class="oi oi-pencil"></i>
                        </button>
                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal"
                        @onclick="() => DeleteGame(game)">
                            <i class="oi oi-x"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private List<Game>? gameList;
    private Game? currentGame;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        gameList = GameClient.Games();
    }

    public void CreateGame()
    {
        NavigationManager.NavigateTo("/game");
    }

    private void EditGame(int id)
    {
        NavigationManager.NavigateTo($"/game/{id}");
    }

    private void OnDeleteModalClose(bool accepted)
    {
        if (accepted)
        {
            GameClient.DeleteGame(currentGame!.Id);
            gameList = GameClient.Games();
        }
    }

    private void DeleteGame(Game game){
        currentGame = game;
    }
}